!
! -----Computes unnormalized voigtn function--i.e. normalized to root pi
!
      FUNCTION VOIGTN(AA,VV)
      IMPLICIT NONE
!
! Cleaned : 20-Nov-2000
!
      REAL*8 VOIGTN,AA,VV
!
      REAL*8 H(25)
      DATA C1,C2/1.128379167095512D0  ,5.64189583547756D-1/
      SAVE C1,C2
!
      REAL*8 V,V2,V4,V6
      REAL*8 A,A2,A4,A6
      REAL*8 Z,Z2                       
      REAL*8 X,W
      REAL*8 C1,C2
!
      INTEGER I,J
!
      REAL*8 DAWSON
      EXTERNAL DAWSON
!
      V=ABS(VV)
      A=AA
      V2=V*V
      A2=A*A
      Z=A2+V2
      IF(A .LE. 0.5D0  )GOTO 20
      IF(Z .LT. 10.D0  )GOTO 50
C-----ASYMPTOTIC EXPANSION FOR LARGE MODULUS
   10 Z2=Z*Z
      V4=V2*V2
      V6=V4*V2
      A4=A2*A2
      A6=A4*A2
      VOIGTN=C2*A* (1.D0  +  ((1.875D0  *(7.D0  *V6-35.D0  *A2*V4+21.D0*A4*V2-A6)
     . /Z2+ 0.75D0  *(5.D0  *V4-10.D0  *A2*V2+A4))/Z2+1.5D0  *V2-0.5D0*A2)/Z2)/Z 
      RETURN
C-----HARRIS EXPANSION
   20 IF(V .GT. 5.D0  ) GOTO 10
      W=DAWSON(V)
      H(1)= EXP(-V2)
      H(2)=-C1*(1.0D0  -2.0D0  *V*W)
      H(3)=(1.0D0  -2.0D0  *V2)*H(1)
      H(4)=-C1*(2.D0  *(1.D0  -V2)/3.D0  -2.D0  *V*W*(1.D0  -2.D0  *V2/3.D0  ))      
C-----HIGHER TERMS BY RECURSION
      DO 30 I=5,11
         X=I-1
         H(I)= (2.0D0 *(2.0D0*X -3.0D0 -2.0D0*V2) *H(I-2) -4.0D0*H(I-4))/(X*(X-1.0D0  ))
   30 CONTINUE
      VOIGTN=H(11)
      DO 40 I=1,10
         J=11-I
         VOIGTN=H(J)+A*VOIGTN
   40 CONTINUE
      RETURN
C-----GRONWALL EXPANSION
   50 X=1.0D0  /(1.0D0  +3.275911D-1*A)
      H(1)=((((1.061405429D0  *X-1.453152027D0  )*X+1.421413741D0  )*X
     . -2.84496736D-1)*X+2.54829592D-1)*X
      DO 60 I=2,25
         X=I-1
         H(I)=2.0D0  *A*(C2-A*H(I-1))/(2.0D0  *X-1.0D0  )
   60 CONTINUE
      VOIGTN=0.0D0
      DO 70 I=1,24
         J=26-I
         X=J-1
         VOIGTN=(VOIGTN+H(J))*V2/X
   70 CONTINUE
      VOIGTN= EXP(-V2)*(VOIGTN+H(1))
      RETURN
      END
!
!-----DAWSON*S INTEGRAL USING ANL ALGORITHM, MATH COMP,1970,171
!
      FUNCTION DAWSON(XX)
      IMPLICIT NONE
!
      REAL*8 DAWSON,XX
      REAL*8 X,U
      REAL*8 UP,DOWN
!
      X=XX
      U=X*X
      IF(X .LT. 5.0D0  ) GOTO 10
!-----X GREATER THAN 5
      DAWSON= ((5.0000000167450D-1+7.4999919056701D-1/
     . (-2.5001711668562D0  +U-2.4878765880441D0  /
     . (-4.6731202214124D0  +U-4.1254406560831D0  /
     . (-1.1195216423662D1+U))))/U+1.0D0  )/(2.0D0  *X)
      RETURN
C-----X ON (3.5D0,5.0D0)
   10 IF(X .LT. 3.5D0  ) GOTO 20
      DAWSON=(5.00001538408193D-1 +2.49811162845499D-1/
     . (-1.53672069271915D0  +U-6.53419359860764D-1/
     . (-1.77068693717670D1 +U+2.04866410976332D2/
     . (7.49584016278357D0   +U-2.298758419286D0  /
     . (4.02187490205698D1+U+2.53388006963558D3/
     . (-5.9391591850032E1+U))))))/X
      RETURN
C-----X ON (2.5,3.5)
   20 IF(X .LT. 2.5D0  ) GOTO 30
      DAWSON=(5.0140106611704D-1+1.8897553014354D-1/
     . (-7.4499050579364D0  +U+7.0204980729194D1/
     , (7.5077816490106D0  +U+4.1821806337830D1/
     , (-2.6629001073842D1 +U+3.7343084728334D1/
     . (3.0984087863402D1+U+1.2599323546764D3/
     . (-4.0847391212716D1+U))))))/X
      RETURN
C-----X LESS THAN 2.5
   30 UP=(((((U*2.0846835103886D-2 -8.5410681195954D-1)*U
     . +5.4616122556699D1)*U-4.3501160207595D2)*U
     . +9.6696398191665D3)*U-2.9179464300780D4)*U+2.3156975201341D5    
      DOWN=((((( U+2.9391995612556D1)*U +4.668490654511D2
     . )*U+4.7447098440662D3)*U+3.1384620138163D4)*U
     . +1.2520037031851D5)*U+2.3156975201425D5
      DAWSON=X*(UP/DOWN)
      RETURN
      END
