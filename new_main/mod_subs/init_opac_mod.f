!
	SUBROUTINE INIT_OPAC_MOD(ND,NT,DO_VAR_MATS)
	USE OPAC_MOD
	IMPLICIT NONE
!
	INTEGER ND
	INTEGER NT
	LOGICAL DO_VAR_MATS
!
	INTEGER LUER
	INTEGER IOS
	INTEGER ERROR_LU
	EXTERNAL ERROR_LU
!
	LUER=ERROR_LU()
!
	ALLOCATE(ETA(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(ETA_CONT(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(ETA_C_EVAL(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(ETA_NOSCAT(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(ETA_NOSCAT_EVAL(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(ETA_CLUMP(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(ETA_MECH(ND),STAT=IOS)
!
	IF(IOS .EQ. 0)ALLOCATE(CHI(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(CHI_CONT(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(CHI_C_EVAL(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(CHI_NOSCAT(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(CHI_NOSCAT_EVAL(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(CHI_CLUMP(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(TCHI(ND),STAT=IOS)
!
	IF(IOS .EQ. 0)ALLOCATE(ETA_PREV(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(CHI_PREV(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(CHI_NOSCAT_PREV(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(CHI_SCAT_PREV(ND),STAT=IOS)
!
	IF(IOS .EQ. 0)ALLOCATE(CHI_SCAT(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(CHI_SCAT_CLUMP(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(CHI_RAY(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(ESEC(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(ESEC_CLUMP(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(ES_COH_VEC(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(THETA(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(ZETA(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(SOURCE(ND),STAT=IOS)
!
	IF(IOS .EQ. 0)ALLOCATE(EMHNUKT(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(EMHNUKT_CONT(ND),STAT=IOS)
!
	IF(IOS .NE. 0)THEN
	  WRITE(LUER,*)'Error in INIT_OPAC_MOD'
	  WRITE(LUER,*)'Unable to allocate requested memory[1]'
	  STOP
	END IF
!
	IF(IOS .EQ. 0)ALLOCATE(XRAY_LUM_0P1(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(XRAY_LUM_1KEV(ND),STAT=IOS)
	IF(IOS .EQ. 0)ALLOCATE(XRAY_LUM_TOT(ND),STAT=IOS)
!
	IF(IOS .NE. 0)THEN
	  WRITE(LUER,*)'Error in INIT_OPAC_MOD'
	  WRITE(LUER,*)'Unable to allocate requested memory[2]'
	  STOP
	END IF
!
	IF(DO_VAR_MATS)THEN
	  IF(IOS .EQ. 0)ALLOCATE(VCHI(NT,ND),STAT=IOS)              !Variation of CHI array.
          IF(IOS .EQ. 0)ALLOCATE(VETA(NT,ND),STAT=IOS)              !Variation of ETA array.
          IF(IOS .EQ. 0)ALLOCATE(VCHI_SAV(NT,ND),STAT=IOS)
          IF(IOS .EQ. 0)ALLOCATE(VETA_SAV(NT,ND),STAT=IOS)
          IF(IOS .EQ. 0)ALLOCATE(VCHI_ALL(NT,ND),STAT=IOS)
	  IF(IOS .EQ. 0)ALLOCATE(VCHI_ALL_SAV(NT,ND),STAT=IOS)
          IF(IOS .EQ. 0)ALLOCATE(VETA_ALL(NT,ND),STAT=IOS)
	  IF(IOS .EQ. 0)ALLOCATE(VETA_ALL_SAV(NT,ND),STAT=IOS)
	  IF(IOS .NE. 0)THEN
	    WRITE(LUER,*)'Error in INIT_OPAC_MOD'
	    WRITE(LUER,*)'Unable to allocate requested memory[3]'
	    STOP
	  END IF
	END IF
!
	RETURN
	END
